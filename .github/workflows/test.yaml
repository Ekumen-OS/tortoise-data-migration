name: test

on:
  pull_request:
    paths-ignore:
      - "docs/**"

  push:
    branches:
      - "main"
    paths-ignore:
      - "docs/**"

jobs:
  dummy_tests:
    name: version_bump
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Setup Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Bump version
        run: |
          CURRENT_VERSION=$(cat pyproject.toml | grep '^version\s*=\s*' | awk '{print $NF}' | tr -d \")
          NEW_VERSION=$(poetry run versionbump --current ${CURRENT_VERSION} patch pyproject.toml)

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: Bump version to ${NEW_VERSION}
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: false
          base: main
          branch: version-bump
          delete-branch: true
          title: 'Update main from ${CURRENT_VERSION} to ${NEW_VERSION}'
          body: |
            Update report
            - Updated pyproject.toml with new version
            - Auto-generated by [create-pull-request][1]

            [1]: https://github.com/peter-evans/create-pull-request
          labels: |
            automated pr
          assignees: manzato
          team-reviewers: |
            owners
            maintainers
          draft: false
